name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  laravel_build:
    name: Laravel Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: blogcms
          MYSQL_PASSWORD: 12345678
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-progress --optimize-autoloader

      - name: Copy file example env
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Run Migration Database
        run: php artisan migrate:fresh --seed

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build Node.JS
        run: npm run build

  laravel_test:
    name: Laravel Test
    runs-on: ubuntu-latest
    needs: laravel_build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-progress --optimize-autoloader

      - name: Copy file example env
        run: cp .env.example .env

      - name: Generate key
        run: php artisan key:generate

      - name: Run Migration Database
        run: php artisan migrate:fresh --seed

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install

      - name: Build Node.JS
        run: npm run build

      - name: Run tests
        run: ./vendor/bin/phpunit

  laravel_notification:
    name: Laravel Notify
    runs-on: ubuntu-latest
    needs: [laravel_build, laravel_test]
    if: always()
    env:
      CURRENT_REPO: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Notify to Telegram
        run: |
          if [[ "${{ needs.laravel_build.result }}" == "success" && "${{ needs.laravel_test.result }}" == "success" ]]; then
            STATUS="CI/CD Pipeline Success ‚úÖ"
          else
            STATUS="CI/CD Pipeline Failure ‚ùå"
          fi
          curl --request POST ${{ secrets.TELEGRAM_BOT }} \
            -d parse_mode="HTML" \
            -d chat_id="${{ secrets.TELEGRAM_CHANNEL }}" \
            -d text="
            %0Aüìù Commit: $GITHUB_SHA
            %0Aüìù Branch: $GITHUB_REF_NAME
            %0Aüìù Status: $STATUS
            %0Aüí¨ Message: <b>${{ github.event.head_commit.message }}</b>
            %0ACek disini: $CURRENT_REPO
            "
